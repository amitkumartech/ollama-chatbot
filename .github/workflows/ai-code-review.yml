name: Ollama AI PR Review (Bot-Only)

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    # Runner must have Ollama + jq installed and be labelled "self-hosted"
    runs-on: [self-hosted, windows, ollama] # <-- add the OS label

    steps:
      # 1. Checkout code -------------------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history; merge base always available

      # Quick probe - show which program GitHub is executing
      - name: Probe current shell
        shell: pwsh
        run: |
          Write-Host "GitHub picked: $($PSVersionTable.PSEdition)  (if this prints Core or Desktop, you are in PowerShell)"
          Write-Host "Bash in PATH? $(where.exe bash 2>$null)"

      # 2. Generate the PR diff -----------------------------------------------
      - name: Produce diff
        id: diff
        shell: pwsh
        run: |
          $BASE_REF = "${{ github.base_ref }}"
          git fetch --depth 1 origin $BASE_REF
          git diff origin/$BASE_REF...HEAD -- '*.ts' '*.html' '*.scss' |
            Out-File -Encoding utf8 pr.diff

          "DIFF<<EOF"            | Out-File -Encoding utf8 -Append $env:GITHUB_OUTPUT
          Get-Content pr.diff    | Out-File -Encoding utf8 -Append $env:GITHUB_OUTPUT
          "EOF"                  | Out-File -Encoding utf8 -Append $env:GITHUB_OUTPUT

      # 3. Ask Ollama for a code review ---------------------------------------
      - name: Query local LLM via Ollama
        id: review
        shell: bash
        run: |
          prompt=$(cat <<'PROMPT' 
          You are a senior Angular/TypeScript reviewer. Identify bugs, missing unit tests, performance issues, and accessibility concerns. Respond in GitHub-flavored Markdown bullets. 
          PROMPT
          )
          # Combine system prompt + diff
          payload=$(jq -n --arg m "gemma:2b" \
                           --arg p "$prompt\n\n----- DIFF START -----\n${{ steps.diff.outputs.DIFF }}\n----- DIFF END -----" \
                           '{model:$m, prompt:$p}')
          # Call local Ollama
          response=$(curl -s http://localhost:11434/api/generate \
                       -H "Content-Type: application/json" \
                       -d "$payload")
          # Extract the generated text (streaming API returns JSON lines)
          review_text=$(echo "$response" | jq -r '.[].response' | tr -d '\r')
          # Expose for next step
          echo "REVIEW<<EOF" >> "$GITHUB_OUTPUT"
          echo "$review_text" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      # 4. Post comment via GitHub REST API (no gh CLI) ------------------------
      - name: Post review comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # built-in token is fine
        run: |
          # Encode the review for JSON
          body=$(jq -Rs <<< "${{ steps.review.outputs.REVIEW }}")
          curl -s -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            -d "{\"body\": $body}"
